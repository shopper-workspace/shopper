server.port=8084
spring.application.name=order-service

# Service Discovery
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Data Store
spring.datasource.url=jdbc:postgresql://localhost:5432/order-service
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=order-service-user
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update

# Resilience
management.health.circuitbreakers.enabled=true
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

# Event Streaming
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.shopper.orderservice.event.OrderPlacedEvent

# Tracing & Observability
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
